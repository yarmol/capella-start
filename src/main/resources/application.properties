# A ridiculously short timeout to test what happens when the session expiresserver.session.timeout=60# Use a custom context path since this makes things a bit trickier than deploying at the rootserver.context-path=/demo# We don't want Vaadin's heart beat signal to keep the session alivevaadin.servlet.close-idle-sessions=true# The session timeout should be a multiple of the heartbeat intervalvaadin.servlet.heartbeat-interval=15#logging.level.root=debug#debug=true#spring.h2.console.settings.trace=true# spring.session.jdbc.initializer.enabled=true# spring.session.store-type=hazelcast# spring.session.hazelcast.map-name=capella-sessions# spring.session.hazelcast.flush-mode=immediate#spring.mongodb.embedded.version=3.2.2#spring.mongodb.embedded.storage.database-dir=cfg#spring.data.mongodb.repositories.enabled=true#spring.data.mongodb.database=capella#spring.data.ongodb.port=5444#spring.data.mongodb.uri=mongodb://localhost:27017/test#spring.data.mongodb.host=127.0.0.1#spring.data.mongodb.port=27017#spring.data.mongodb.password=#spring.data.mongodb.username=spring.data.mongodb.host=localhostspring.data.mongodb.port=27017#spring.data.mongodb.uri=mongodb://localhost/capella-devspring.data.mongodb.database=capellaspring.mongodb.embedded.storage.database-dir=cfg#spring.data.jpa.repositories.enabled=true#spring.datasource.url=jdbc:h2:file:./cfg/db/app;DB_CLOSE_ON_EXIT=FALSE#spring.datasource.driverClassName=org.h2.Driver#spring.datasource.username=sa#spring.datasource.password=#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect#spring.jpa.hibernate.ddl-auto=none